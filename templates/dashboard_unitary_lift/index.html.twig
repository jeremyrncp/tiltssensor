{% extends 'base.html.twig' %}

{% block title %}{{ "lift.title"|trans }} {{ lift.inventory }} {% endblock %}

{% block body %}
<br />
<h1>{{ lift.inventory }}</h1>
<div class="row mt-4">
    <div class="col-3">
        <div class="alert alert-warning">
            <b>{{ "lift.inventory"|trans }}</b> : {{ lift.inventory }}<br />
            <b>{{ "lift.address"|trans }}</b> : {{ lift.address }} <b>{{ "lift.quartier"|trans }}</b> : {{ lift.quartier }}<br />
            <b>{{ "lift.number.floor"|trans }}</b> : {{ lift.floor }}<br />
            <b>{{ "lift.status"|trans }}</b> : {{ liftData.status }}<br />
            <b>{{ "lift.movements"|trans }}</b> : {{ liftData.movements }}<br />
            <b>{{ "lift.note"|trans }}</b> : {{ lift.note }}<br />
            <b>{{ "lift.name.contact"|trans }}</b> : {{ lift.nameContact }} <b>{{ "lift.phone.contact"|trans }}</b> : {{ lift.phoneContact }}<br />
            <b>{{ "lift.maintener"|trans }}</b> : {{ lift.maintener }}<br />
            <b>{{ "lift.maintenance"|trans }}</b> : {{ liftData.isMaintenance == true ? 'yes' : 'no' }}<br />
        </div>
        <div class="alert alert-info">
            <h3>{{ "lift.discussions"|trans }}</h3><br />
            <div style="height:300px; overflow-y: scroll;">
                {% for note in lift.notes %}
                    <p class="mb-2">
                        <b>{{ note.owner }}</b> - {{ note.createdAt|date('Y-m-d H:i:s') }}<br />
                        {{ note.content|raw }}
                    </p>
                {% endfor %}
            </div>
            {% if is_granted('ROLE_SUPER_ADMIN') == false %}
                <br />
                <h3>{{ "lift.add.note"|trans }}</h3>
                {{ form(noteForm) }}
            {% endif %}
        </div>
    </div>
    <div class="col-6">
        {% if liftData.multipleSensor is not defined %}
        <div id="chartMovements"></div>
        {% else %}
            {% for index,data in liftData.multipleSensor.floorDatas %}
                <div id="chartMovements{{ index }}"></div>
            {% endfor %}
        {% endif %}

        <table class="table table-responsive table-hover table-bordered">
            <tr>
                <th>{{ "lift.floor"|trans }}</th>
                <th>{{ "lift.date"|trans }}</th>
                <th>{{ "lift.movements"|trans }}</th>
            </tr>
        {% if liftData.multipleSensor is not defined %}
                {% for date, mouvement in liftData.mouvementsData %}
                    <tr>
                        <td>0</td>
                        <td>{{ date }}</td>
                        <td>{{ mouvement }}</td>
                    </tr>
                {% endfor %}
        {% else %}
            {% for index,data in liftData.multipleSensor.floorDatas %}
                {% for date, mouvement in data.mouvementsData %}
                    <tr>
                        <td>{{ index }}</td>
                        <td>{{ date }}</td>
                        <td>{{ mouvement }}</td>
                    </tr>
                {% endfor %}
            {% endfor %}
        {% endif %}
        </table>
    </div>
    <div class="col-3">
        {{ form(rangeDateForm) }}
        <div id="map" style="height:500px"></div>
    </div>
</div>
<br />
    <a href="{{ path("app_dashboard_lift") }}">{{ "back.to.index"|trans }}</a>
<br />
<script type="text/javascript">
    const { AgCharts } = agCharts;

    {% if liftData.multipleSensor is not defined %}
   // Movement
    const movements = {
      container: document.getElementById("chartMovements"),
      title: {
        text: "{{ "lift.movements"|trans }}",
      },
      data: [
          {% for date, mouvement in liftData.mouvementsData %}
        { date: "{{ date }}", movement: {{ mouvement }} },
          {% endfor %}
      ],

      // Series: Defines which chart type and data to use
      series: [{ type: "bar", xKey: "date", yKey: "movement" }],
    };

    AgCharts.create(movements);
    {% else %}
        {% for index,data in liftData.multipleSensor.floorDatas %}
            // Movement
            const movements{{ index }} = {
              container: document.getElementById("chartMovements{{ index }}"),
              title: {
                text: "{{ "lift.movements"|trans }} ({{ "lift.floor"|trans }} {{ index }})",
              },
              data: [
                  {% for date, mouvement in data.mouvementsData %}
                { date: "{{ date }}", movement: {{ mouvement }} },
                  {% endfor %}
              ],

              // Series: Defines which chart type and data to use
              series: [{ type: "bar", xKey: "date", yKey: "movement" }],
            };

            AgCharts.create(movements{{ index }} );
        {% endfor %}
    {% endif %}



    map = L.map('map').setView([{{ lift.latitude }}, {{ lift.longitude }}], 12);
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);
    L.marker([{{ lift.latitude }}, {{ lift.longitude }}]).addTo(map);
</script>
{% endblock %}
